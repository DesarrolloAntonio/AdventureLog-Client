name: CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx8g -XX:+UseParallelGC"
  GRADLE_TIMEOUT: 60

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'
          
      - name: Create local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > local.properties
          
      - name: Build KMP Framework
        run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
        
      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -project iosApp.xcodeproj \
            -scheme iosApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 15,OS=17.2" \
            build

  dependency-submission:
    name: Dependency Submission
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          
      - name: Build Android Debug
        run: ./gradlew :composeApp:assembleDebug
        
      - name: Upload Android Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: composeApp/build/outputs/apk/debug/*.apk

  android-instrumented-tests:
    name: Android Instrumented Tests
    runs-on: ubuntu-latest
    needs: android-build
    strategy:
      matrix:
        api-level: [29, 33]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'
          
      - name: Create local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > local.properties
          
      - name: Build KMP Framework
        run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
        
      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -project iosApp.xcodeproj \
            -scheme iosApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 15,OS=17.2" \
            build

  dependency-submission:
    name: Dependency Submission
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3
        uses: gradle/actions/setup-gradle@v3
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666"' | sudo tee /etc/udev/rules.d/99-kvm.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
          
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
          
      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: ./gradlew connectedAndroidTest
        continue-on-error: true

  ios-build:
    name: iOS Build
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'
          
      - name: Create local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > local.properties
          
      - name: Build KMP Framework
        run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
        
      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -project iosApp.xcodeproj \
            -scheme iosApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 15,OS=17.2" \
            build

  dependency-submission:
    name: Dependency Submission
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3
        uses: gradle/actions/setup-gradle@v3
        
      - name: Run unit tests
        run: ./gradlew test
        continue-on-error: true
        
      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Test Results
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit

  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'
          
      - name: Create local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > local.properties
          
      - name: Build KMP Framework
        run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
        
      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -project iosApp.xcodeproj \
            -scheme iosApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 15,OS=17.2" \
            build

  dependency-submission:
    name: Dependency Submission
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          
      - name: Build Android Debug
        run: ./gradlew :composeApp:assembleDebug
        
      - name: Upload Android Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: composeApp/build/outputs/apk/debug/*.apk

  android-instrumented-tests:
    name: Android Instrumented Tests
    runs-on: ubuntu-latest
    needs: android-build
    strategy:
      matrix:
        api-level: [29, 33]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'
          
      - name: Create local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > local.properties
          
      - name: Build KMP Framework
        run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
        
      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -project iosApp.xcodeproj \
            -scheme iosApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 15,OS=17.2" \
            build

  dependency-submission:
    name: Dependency Submission
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3
        uses: gradle/actions/setup-gradle@v3
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666"' | sudo tee /etc/udev/rules.d/99-kvm.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
          
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
          
      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: ./gradlew connectedAndroidTest
        continue-on-error: true

  ios-build:
    name: iOS Build
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'
          
      - name: Create local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > local.properties
          
      - name: Build KMP Framework
        run: ./gradlew :composeApp:linkDebugFrameworkIosSimulatorArm64
        
      - name: Build iOS App
        run: |
          cd iosApp
          xcodebuild -project iosApp.xcodeproj \
            -scheme iosApp \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 15,OS=17.2" \
            build

  dependency-submission:
    name: Dependency Submission
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3