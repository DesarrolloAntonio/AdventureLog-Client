name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: write

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx8g -XX:+UseParallelGC"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          
      - name: Run unit tests
        run: ./gradlew test
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: '**/build/reports/tests/'

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          
      - name: Build Debug APK
        run: ./gradlew :composeApp:assembleDebug
        
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: composeApp/build/outputs/apk/debug/*.apk

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: debug-apk
          path: ./apk
          
      - name: Get commit info
        id: commit
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: dev-${{ steps.commit.outputs.date }}
          name: Dev Build - ${{ steps.commit.outputs.date }}
          files: ./apk/*.apk
          generate_release_notes: true
          prerelease: true
          body: |
            ðŸš€ Automatic development build from main branch
            
            **Commit:** ${{ steps.commit.outputs.sha_short }}
            **Date:** ${{ steps.commit.outputs.date }}
            
            This is an automated build for testing purposes.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
